name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chrome:latest  # Using Selenium Chrome standalone service
        options: --shm-size 2g  # Increase shared memory size for Chrome
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version

      - name: Install Node.js dependencies
        run: npm install  # Install all project dependencies

      - name: Make Mocha executable
        run: chmod +x node_modules/.bin/mocha

      - name: Run Mocha tests
        run: |
          if [ -f "test/mocha.test.js" ]; then  # Check if Mocha test file exists
            echo "Running Mocha tests..."
            npm test  # Runs Mocha test script
          else
            echo "No Mocha tests found; skipping this step."
          fi

      - name: Build frontend
        run: |
          if [ -f "package.json" ]; then  # Check if package.json file exists
            echo "Building frontend application..."
            npm run build
          else
            echo "No frontend build configuration found; skipping build."
          fi

      - name: Test frontend
        run: |
          if [ -f "test/frontend.test.js" ]; then  # Check if frontend test file exists
            echo "Running frontend tests..."
            npm test
          else
            echo "No frontend tests found; skipping frontend tests."
          fi

      - name: Check Docker version
        run: docker --version

      - name: Build Docker image
        run: |
          if [ -f "Dockerfile" ]; then  # Check if Dockerfile exists
            echo "Building Docker image..."
            docker build -t my-selenium-app:latest .
          else
            echo "No Dockerfile found; skipping Docker build."
          fi

      - name: Save Docker image
        run: |
          if docker image inspect my-selenium-app:latest > /dev/null 2>&1; then
            docker image save my-selenium-app:latest | xz -z -e -7 -T0 > image.xz
            echo "Docker image saved as image.xz"
          else
            echo "Docker image not found; skipping save."
          fi

      - name: List Files
        run: ls -la  # Verify that image.xz was created

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}  # Use the run number as the version tag
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: image.xz  # Path to the compressed Docker image
          asset_name: image.xz
          asset_content_type: application/x-xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Google Search Test
        id: run_tests
        run: |
          if [ -f "Google.py" ]; then  # Check if Google.py test file exists
            echo "Running Google Search test..."
            python Google.py > test_results.log || exit 0
            cat test_results.log
          else
            echo "No Google Search test found; skipping this step."
          fi

      - name: Show test results
        run: |
          echo "Selenium tests executed: Google.py"
  

      - name: Confirm test execution
        if: ${{ steps.run_tests.outcome == 'success' }}
        run: echo "Selenium tests executed successfully."

      - name: Handle test failure
        if: ${{ steps.run_tests.outcome != 'success' }}
        run: |
          echo "Selenium tests failed. Please check the logs for details."

      - name: Deploy frontend
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Deploying frontend application..."
            npm run deploy  # Deploy command for the frontend
          else
            echo "Not deploying frontend as the workflow is not triggered by a push event."
          fi
