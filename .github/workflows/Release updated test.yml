name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install Mocha Globally (if Mocha is not in `package.json`)
        run: npm install -g mocha

      - name: Run Mocha Tests
        id: mocha_tests
        run: |
          mocha || exit 1

      # Else condition for Mocha tests
      - name: Mocha Tests Else Condition
        if: ${{ failure() && steps.mocha_tests.outcome != 'success' }}
        run: exit 1

      - name: Build npm Packages
        run: npm run build

      - name: Run npm Tests
        id: npm_tests
        run: |
          npm test || exit 1

      # Else condition for npm tests
      - name: Npm Tests Else Condition
        if: ${{ failure() && steps.npm_tests.outcome != 'success' }}
        run: exit 1

      - name: Check Docker Version
        run: |
          docker --version || exit 1

      - name: Build Docker Image
        id: docker_build
        run: |
          docker build -t my-selenium-app:latest . || exit 1

      # Else condition for Docker image build
      - name: Docker Build Else Condition
        if: ${{ failure() && steps.docker_build.outcome != 'success' }}
        run: exit 1

      - name: Save Docker Image
        run: docker image save my-selenium-app:latest | xz -z -e -7 -T0 > image.xz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: image.xz
          asset_name: image.xz
          asset_content_type: application/x-xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Selenium
        run: pip install selenium

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager

      - name: Run Google Search Test
        id: google_search_test
        run: |
           python Google.py > test_results.log || exit 1

      # Show test results regardless of outcome
      - name: Show test results
        run: cat test_results.log

      # Else condition for Google Search test
      - name: Google Search Test Else Condition
        if: ${{ failure() && steps.google_search_test.outcome != 'success' }}
        run: exit 1

      - name: Deploy application
        id: deploy
        run: npm run deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Conditional step for successful deployment
      - name: Deployment Success
        if: ${{ success() && steps.deploy.outcome == 'success' }}
        run: echo "Deployment completed successfully."

      # Conditional step for deployment failure
      - name: Deployment Failure
        if: ${{ failure() || steps.deploy.outcome != 'success' }}
        run: exit 1

      # Catch any unexpected outcomes
      - name: Unexpected Outcome
        if: ${{ steps.deploy.outcome == 'skipped' || (!success() && !failure()) }}
        run: exit 1
